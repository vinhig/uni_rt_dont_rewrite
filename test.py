import numpy as np
import scipy

yo = np.array([[1.000000, -0.086801, 0.961807, -0.259602, -0.273847, 0.181199, 0.271471, 0.294975, 0.100272, 0.292361],
[1.000000, 0.056401, 0.937712, -0.342804, -0.291069, 0.070086, 0.280389, 0.333244, 0.015001, 0.311886],
[1.000000, -0.015101, 0.846031, -0.532920, -0.214882, 0.328503, 0.235722, 0.181623, 0.329570, 0.220432],
[1.000000, -0.086801, 0.961807, -0.259602, -0.264084, 0.146974, 0.259379, 0.274318, 0.065971, 0.266897],
[1.000000, 0.044599, 0.933272, -0.356389, -0.255534, 0.285481, 0.269763, 0.256843, 0.248900, 0.288695],
[1.000000, -0.015101, 0.846031, -0.532920, -0.221922, 0.371559, 0.240093, 0.193719, 0.421624, 0.228683],
[1.000000, -0.015101, 0.846031, -0.532920, -0.218539, 0.297970, 0.233041, 0.187858, 0.271153, 0.215447],
[1.000000, -0.110798, 0.985278, -0.130197, -0.232121, 0.127842, 0.224035, 0.211933, 0.049913, 0.199115],
[1.000000, -0.015101, 0.846031, -0.532920, -0.224970, 0.387400, 0.241738, 0.199076, 0.458341, 0.231828],
[1.000000, -0.086801, 0.961807, -0.259602, -0.260291, 0.164542, 0.257155, 0.266494, 0.082684, 0.262339],
[1.000000, 0.044599, 0.933272, -0.356389, -0.251419, 0.157620, 0.253015, 0.248638, 0.075874, 0.253960],
[1.000000, -0.086801, 0.961807, -0.259602, -0.271393, 0.149248, 0.252816, 0.289713, 0.068028, 0.253562],
[1.000000, -0.086801, 0.961807, -0.259602, -0.258952, 0.137835, 0.252215, 0.263760, 0.058021, 0.252358],
[1.000000, -0.110798, 0.985278, -0.130197, -0.242179, 0.272685, 0.221076, 0.230698, 0.227087, 0.193892],
[1.000000, 0.051601, 0.966114, 0.252904, -0.277497, 0.136144, 0.255526, 0.302891, 0.056606, 0.259027],
[1.000000, -0.015101, 0.846031, -0.532920, -0.224157, 0.414599, 0.244230, 0.197640, 0.524959, 0.236631],])

np.set_printoptions(threshold=np.inf)
np.set_printoptions(linewidth=np.inf)
np.set_printoptions(suppress=True, formatter={'float': '{: 0.3f}'.format})

q = np.linalg.qr(yo, mode="reduced")[0]
print("---Q---")
print(q)
r = np.linalg.qr(yo, mode="reduced")[1]
print("---R---")
print(r)

print("---Q*R---")

print(np.matmul(q, r))

x1 = np.array([
    1.435767,
1.294816,
1.592407,
1.153292,
1.274210,
1.496080,
1.363544,
1.439416,
1.575890,
1.113173,
1.387907,
1.457647,
1.460007,
1.346844,
1.211592,
1.381739,
])

print("---Q^T*x1---")
q_x1 = np.matmul(np.transpose(q), x1)
print(q_x1)

print("---soluce with QR---")

print(scipy.linalg.solve_triangular(r, q_x1))

print("---soluce with lstsq---")

alpha = np.linalg.lstsq(yo, x1, rcond=None)[0]

print(alpha)

x2 = np.array([1.430886,
 1.193851,
 1.383116,
 1.333977,
 1.425856,
 1.600795,
 1.458841,
 1.516296,
 1.411617,
 1.106128,
 1.342283,
 1.426399,
 1.170378,
 1.493010,
 1.394479,
 1.661522,])

alpha = np.linalg.lstsq(yo, x2, rcond=None)[0]

print(alpha)

x3 = np.array([1.433595,
 1.214243,
 1.400144,
 1.504185,
 1.439065,
 1.670957,
 1.467392,
 1.786960,
 1.422120,
 1.131832,
 1.358801,
 1.439830,
 1.188774,
 1.531308,
 1.480865,
 1.777191,])

alpha = np.linalg.lstsq(yo, x3, rcond=None)[0]

print(alpha)
